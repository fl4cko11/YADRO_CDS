#! /usr/bin/vvp
:ivl_version "11.0 (stable)";
:ivl_delay_selection "TYPICAL";
:vpi_time_precision + 0;
:vpi_module "/usr/lib/x86_64-linux-gnu/ivl/system.vpi";
:vpi_module "/usr/lib/x86_64-linux-gnu/ivl/vhdl_sys.vpi";
:vpi_module "/usr/lib/x86_64-linux-gnu/ivl/vhdl_textio.vpi";
:vpi_module "/usr/lib/x86_64-linux-gnu/ivl/v2005_math.vpi";
:vpi_module "/usr/lib/x86_64-linux-gnu/ivl/va_math.vpi";
:vpi_module "/usr/lib/x86_64-linux-gnu/ivl/v2009.vpi";
S_0x5557d0de4620 .scope package, "$unit" "$unit" 2 1;
 .timescale 0 0;
S_0x5557d0df3580 .scope module, "testbench" "testbench" 3 4;
 .timescale 0 0;
P_0x5557d0df3710 .param/l "in_cnt_w" 1 3 39, +C4<00000000000000000000000000001010>;
P_0x5557d0df3750 .param/l "n_inputs" 1 3 36, +C4<0000000000000000000000000000000000000000000000000000001100100000>;
P_0x5557d0df3790 .param/l "n_outputs" 1 3 35, +C4<00000000000000000000000001100100>;
P_0x5557d0df37d0 .param/l "out_cnt_w" 1 3 41, +C4<00000000000000000000000000000111>;
P_0x5557d0df3810 .param/l "width" 1 3 33, +C4<00000000000000000000000000001000>;
v0x5557d0e1eb60_0 .var "clk", 0 0;
v0x5557d0e1ec20_0 .var/2s "current_inputs", 31 0;
v0x5557d0e1ece0_0 .var "d_serial_data", 0 0;
v0x5557d0e1edb0_0 .var "d_serial_valid", 0 0;
v0x5557d0e1ee70_0 .var "in_vld_cnt", 9 0;
v0x5557d0e1efa0_0 .var "out_vld_cnt", 6 0;
v0x5557d0e1f080_0 .net "parallel_data", 7 0, v0x5557d0de8fc0_0;  1 drivers
v0x5557d0e1f140_0 .var "parallel_data_expected", 7 0;
v0x5557d0e1f200_0 .net "parallel_valid", 0 0, v0x5557d0e1e750_0;  1 drivers
v0x5557d0e1f2d0_0 .var/queue "queue", 1;
v0x5557d0e1f370_0 .var "rst", 0 0;
v0x5557d0e1f440_0 .var "serial_data", 0 0;
v0x5557d0e1f510_0 .var "serial_valid", 0 0;
v0x5557d0e1f5e0_0 .var/2u "was_reset", 0 0;
E_0x5557d0def380 .event negedge, v0x5557d0e1e860_0;
S_0x5557d0db5cf0 .scope begin, "$ivl_for_loop0" "$ivl_for_loop0" 3 95, 3 95 0, S_0x5557d0df3580;
 .timescale 0 0;
v0x5557d0de2ff0_0 .var/2s "i", 31 0;
S_0x5557d0e1e380 .scope module, "dut" "serial_to_parallel" 3 52, 4 5 0, S_0x5557d0df3580;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "clk";
    .port_info 1 /INPUT 1 "rst";
    .port_info 2 /INPUT 1 "serial_valid";
    .port_info 3 /INPUT 1 "serial_data";
    .port_info 4 /OUTPUT 1 "parallel_valid";
    .port_info 5 /OUTPUT 8 "parallel_data";
P_0x5557d0e1e580 .param/l "width" 0 4 7, +C4<00000000000000000000000000001000>;
v0x5557d0de7930_0 .net "clk", 0 0, v0x5557d0e1eb60_0;  1 drivers
v0x5557d0de8c70_0 .var/2s "counter_of_bits", 31 0;
v0x5557d0de8fc0_0 .var "parallel_data", 7 0;
v0x5557d0de91a0_0 .var "parallel_data_collector", 7 0;
v0x5557d0e1e750_0 .var "parallel_valid", 0 0;
v0x5557d0e1e860_0 .net "rst", 0 0, v0x5557d0e1f370_0;  1 drivers
v0x5557d0e1e920_0 .net "serial_data", 0 0, v0x5557d0e1f440_0;  1 drivers
v0x5557d0e1e9e0_0 .net "serial_valid", 0 0, v0x5557d0e1f510_0;  1 drivers
E_0x5557d0def0e0 .event posedge, v0x5557d0de7930_0;
    .scope S_0x5557d0e1e380;
T_0 ;
    %wait E_0x5557d0def0e0;
    %load/vec4 v0x5557d0e1e860_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_0.0, 8;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x5557d0de8c70_0, 0, 32;
    %pushi/vec4 1, 1, 1;
    %store/vec4 v0x5557d0e1e750_0, 0, 1;
    %pushi/vec4 255, 255, 8;
    %store/vec4 v0x5557d0de8fc0_0, 0, 8;
    %pushi/vec4 0, 0, 8;
    %store/vec4 v0x5557d0de91a0_0, 0, 8;
T_0.0 ;
    %load/vec4 v0x5557d0e1e9e0_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_0.2, 8;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x5557d0de8c70_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0x5557d0de8c70_0, 0, 32;
    %load/vec4 v0x5557d0de8c70_0;
    %cmpi/s 8, 0, 32;
    %flag_or 5, 4;
    %jmp/0xz  T_0.4, 5;
    %vpi_call/w 4 33 "$display", "bits catched: %d", v0x5557d0de8c70_0 {0 0 0};
    %vpi_call/w 4 34 "$display", "data input %b", v0x5557d0e1e920_0 {0 0 0};
    %load/vec4 v0x5557d0e1e920_0;
    %load/vec4 v0x5557d0de8c70_0;
    %subi 1, 0, 32;
    %ix/vec4/s 4;
    %store/vec4 v0x5557d0de91a0_0, 4, 1;
    %vpi_call/w 4 36 "$display", "par data col: %o", v0x5557d0de91a0_0 {0 0 0};
T_0.4 ;
    %load/vec4 v0x5557d0de8c70_0;
    %cmpi/e 8, 0, 32;
    %jmp/0xz  T_0.6, 4;
    %vpi_call/w 4 39 "$display", "\000" {0 0 0};
    %vpi_call/w 4 40 "$display", "SHOWING FINAL DATA..." {0 0 0};
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x5557d0e1e750_0, 0, 1;
    %load/vec4 v0x5557d0de91a0_0;
    %store/vec4 v0x5557d0de8fc0_0, 0, 8;
    %vpi_call/w 4 43 "$display", "parallel data: %o", v0x5557d0de8fc0_0 {0 0 0};
    %pushi/vec4 0, 0, 8;
    %store/vec4 v0x5557d0de91a0_0, 0, 8;
T_0.6 ;
T_0.2 ;
    %jmp T_0;
    .thread T_0;
    .scope S_0x5557d0df3580;
T_1 ;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x5557d0e1f5e0_0, 0, 1;
    %end;
    .thread T_1, $init;
    .scope S_0x5557d0df3580;
T_2 ;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x5557d0e1eb60_0, 0, 1;
T_2.0 ;
    %delay 500, 0;
    %load/vec4 v0x5557d0e1eb60_0;
    %inv;
    %store/vec4 v0x5557d0e1eb60_0, 0, 1;
    %jmp T_2.0;
    %end;
    .thread T_2;
    .scope S_0x5557d0df3580;
T_3 ;
    %pushi/vec4 1, 1, 1;
    %assign/vec4 v0x5557d0e1f370_0, 0;
    %pushi/vec4 2, 0, 32;
T_3.0 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_3.1, 5;
    %jmp/1 T_3.1, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %wait E_0x5557d0def0e0;
    %jmp T_3.0;
T_3.1 ;
    %pop/vec4 1;
    %pushi/vec4 1, 0, 1;
    %assign/vec4 v0x5557d0e1f370_0, 0;
    %pushi/vec4 2, 0, 32;
T_3.2 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_3.3, 5;
    %jmp/1 T_3.3, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %wait E_0x5557d0def0e0;
    %jmp T_3.2;
T_3.3 ;
    %pop/vec4 1;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v0x5557d0e1f370_0, 0;
    %end;
    .thread T_3;
    .scope S_0x5557d0df3580;
T_4 ;
    %wait E_0x5557d0def0e0;
    %load/vec4 v0x5557d0e1f370_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_4.0, 8;
    %pushi/vec4 1, 0, 1;
    %assign/vec4 v0x5557d0e1f5e0_0, 0;
    %pushi/vec4 0, 0, 7;
    %assign/vec4 v0x5557d0e1efa0_0, 0;
    %pushi/vec4 0, 0, 10;
    %assign/vec4 v0x5557d0e1ee70_0, 0;
    %ix/load 4, 0, 0;
    %null;
    %store/obj v0x5557d0e1f2d0_0;
    %jmp T_4.1;
T_4.0 ;
    %load/vec4 v0x5557d0e1f5e0_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_4.2, 8;
    %load/vec4 v0x5557d0e1f510_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_4.4, 8;
    %load/vec4 v0x5557d0e1ee70_0;
    %addi 1, 0, 10;
    %assign/vec4 v0x5557d0e1ee70_0, 0;
    %ix/load 4, 0, 0;
    %load/vec4 v0x5557d0e1f440_0;
    %store/qb/v v0x5557d0e1f2d0_0, 4, 1;
T_4.4 ;
    %load/vec4 v0x5557d0e1f200_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_4.6, 8;
    %load/vec4 v0x5557d0e1efa0_0;
    %addi 1, 0, 7;
    %assign/vec4 v0x5557d0e1efa0_0, 0;
    %vpi_func 3 84 "$size" 32, v0x5557d0e1f2d0_0 {0 0 0};
    %cmpi/u 8, 0, 32;
    %jmp/0xz  T_4.8, 5;
    %vpi_call/w 3 86 "$display", "FAIL %s", "testbench.sv" {0 0 0};
    %vpi_func 3 89 "$size" 32, v0x5557d0e1f2d0_0 {0 0 0};
    %vpi_func/s 3 89 "$sformatf", "queue.size ():%0d", S<0,vec4,u32> {1 0 0};
    %vpi_func/s 3 89 "$sformatf", "width:%0d", P_0x5557d0df3810 {0 0 0};
    %vpi_call/w 3 88 "$display", "++ TEST     => {%s, %s}", S<1,str>, S<0,str> {0 0 2};
    %vpi_call/w 3 91 "$finish", 32'sb00000000000000000000000000000001 {0 0 0};
    %jmp T_4.9;
T_4.8 ;
    %fork t_1, S_0x5557d0db5cf0;
    %jmp t_0;
    .scope S_0x5557d0db5cf0;
t_1 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x5557d0de2ff0_0, 0, 32;
T_4.10 ;
    %load/vec4 v0x5557d0de2ff0_0;
    %cmpi/s 8, 0, 32;
    %jmp/0xz T_4.11, 5;
    %qpop/f/v v0x5557d0e1f2d0_0, 1;
    %ix/getv/s 4, v0x5557d0de2ff0_0;
    %store/vec4 v0x5557d0e1f140_0, 4, 1;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x5557d0de2ff0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0x5557d0de2ff0_0, 0, 32;
    %jmp T_4.10;
T_4.11 ;
    %end;
    .scope S_0x5557d0df3580;
t_0 %join;
    %load/vec4 v0x5557d0e1f080_0;
    %load/vec4 v0x5557d0e1f140_0;
    %cmp/ne;
    %jmp/0xz  T_4.12, 6;
    %vpi_call/w 3 100 "$display", "FAIL %s", "testbench.sv" {0 0 0};
    %vpi_func/s 3 103 "$sformatf", "parallel_data:%h", v0x5557d0e1f080_0 {0 0 0};
    %vpi_func/s 3 103 "$sformatf", "parallel_data_expected:%h", v0x5557d0e1f140_0 {0 0 0};
    %vpi_call/w 3 102 "$display", "++ TEST     => {%s, %s}", S<1,str>, S<0,str> {0 0 2};
    %vpi_call/w 3 105 "$finish", 32'sb00000000000000000000000000000001 {0 0 0};
T_4.12 ;
T_4.9 ;
T_4.6 ;
T_4.2 ;
T_4.1 ;
    %jmp T_4;
    .thread T_4;
    .scope S_0x5557d0df3580;
T_5 ;
    %pushi/vec4 0, 0, 2;
    %split/vec4 1;
    %assign/vec4 v0x5557d0e1f440_0, 0;
    %assign/vec4 v0x5557d0e1f510_0, 0;
    %wait E_0x5557d0def380;
T_5.0 ;
    %load/vec4 v0x5557d0e1ec20_0;
    %pad/s 64;
    %cmpi/ne 800, 0, 64;
    %jmp/0xz T_5.1, 4;
    %load/vec4 v0x5557d0e1ec20_0;
    %cmpi/s 20, 0, 32;
    %flag_or 5, 4;
    %jmp/0xz  T_5.2, 5;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x5557d0e1edb0_0, 0, 1;
    %load/vec4 v0x5557d0e1f440_0;
    %inv;
    %store/vec4 v0x5557d0e1ece0_0, 0, 1;
    %jmp T_5.3;
T_5.2 ;
    %vpi_func 3 141 "$urandom" 32 {0 0 0};
    %pad/u 1;
    %store/vec4 v0x5557d0e1edb0_0, 0, 1;
    %vpi_func 3 142 "$urandom" 32 {0 0 0};
    %pad/u 1;
    %store/vec4 v0x5557d0e1ece0_0, 0, 1;
T_5.3 ;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x5557d0e1ec20_0;
    %load/vec4 v0x5557d0e1edb0_0;
    %pad/u 32;
    %cast2;
    %add;
    %cast2;
    %store/vec4 v0x5557d0e1ec20_0, 0, 32;
    %load/vec4 v0x5557d0e1edb0_0;
    %load/vec4 v0x5557d0e1ece0_0;
    %concat/vec4; draw_concat_vec4
    %split/vec4 1;
    %assign/vec4 v0x5557d0e1f440_0, 0;
    %assign/vec4 v0x5557d0e1f510_0, 0;
    %wait E_0x5557d0def0e0;
    %jmp T_5.0;
T_5.1 ;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v0x5557d0e1f510_0, 0;
    %wait E_0x5557d0def0e0;
    %wait E_0x5557d0def0e0;
    %load/vec4 v0x5557d0e1efa0_0;
    %pad/u 32;
    %muli 8, 0, 32;
    %pad/u 10;
    %load/vec4 v0x5557d0e1ee70_0;
    %cmp/ne;
    %jmp/0xz  T_5.4, 6;
    %vpi_call/w 3 160 "$display", "FAIL %s", "testbench.sv" {0 0 0};
    %load/vec4 v0x5557d0e1efa0_0;
    %pad/u 32;
    %muli 8, 0, 32;
    %vpi_func/s 3 162 "$sformatf", "out_vld_cnt*width:%0d", S<0,vec4,u32> {1 0 0};
    %vpi_func/s 3 162 "$sformatf", "in_vld_cnt:%0d", v0x5557d0e1ee70_0 {0 0 0};
    %vpi_call/w 3 162 "$display", "++ TEST     => {%s != %s}", S<1,str>, S<0,str> {0 0 2};
    %vpi_call/w 3 163 "$display", "++ EXPECTED => out_vld_cnt * width == in_vld_cnt" {0 0 0};
    %vpi_call/w 3 165 "$finish", 32'sb00000000000000000000000000000001 {0 0 0};
T_5.4 ;
    %vpi_call/w 3 168 "$display", "PASS %s", "testbench.sv" {0 0 0};
    %vpi_call/w 3 169 "$finish" {0 0 0};
    %end;
    .thread T_5;
# The file index is used to find the file name in the following table.
:file_names 5;
    "N/A";
    "<interactive>";
    "-";
    "testbench.sv";
    "./02_10_serial_to_parallel.sv";
